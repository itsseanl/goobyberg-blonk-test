{"version":3,"file":"index.5122cc0f5bc9329efaaf.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACqC;;AAErC;AACA;AACA;AACA;AACA;AACA;AAMiC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACuB;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEiC;AAC2B;AAC7C,SAASQ,IAAIA,CAAC;EAAEC,UAAU;EAAEC,SAAS;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACtE;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,+CAAQ,CAACI,UAAU,CAACI,WAAW,CAAC;EACtE,MAAME,UAAU,GAAGd,sEAAa,CAAC;IAChCS,SAAS,EAAEG;EACZ,CAAC,CAAC;EAEF,MAAMG,cAAc,GAAIC,SAAS,IAAK;IACrC,OACCC,oDAAA;MACCC,GAAG,EAAEV,UAAU,CAACW,QAAS;MACzBC,OAAO,EAAEJ,SAAU;MACnBK,GAAG,EAAEb,UAAU,EAAEc,QAAS;MAC1B,gBAAcd,UAAU,EAAEe,OAAQ;MAClCd,SAAS,EAAC;IAAkB,CAC5B,CAAC;EAEJ,CAAC;EAED,OACCQ,oDAAA;IAAA,GAAaH;EAAU,GACtBG,oDAAA;IACCO,KAAK,EAAEhB,UAAU,CAACI,WAAY;IAC9Ba,QAAQ,EAAGC,CAAC,IAAK;MAChBC,OAAO,CAACC,GAAG,CAACF,CAAC,CAACG,MAAM,CAACL,KAAK,CAAC;MAC3Bd,aAAa,CAAC;QAAEE,WAAW,EAAEc,CAAC,CAACG,MAAM,CAACL;MAAM,CAAC,CAAC;MAC9CX,cAAc,CAACa,CAAC,CAACG,MAAM,CAACL,KAAK,CAAC;IAC/B;EAAE,GAEFP,oDAAA;IAAQO,KAAK,EAAC;EAAM,GAAC,2BAAiC,CAAC,EACvDP,oDAAA;IAAQO,KAAK,EAAC;EAAO,GAAC,2BAAiC,CAChD,CAAC,EAQTP,oDAAA,CAACd,6DAAQ;IACR2B,OAAO,EAAC,GAAG,CAAC;IAAA;IACZN,KAAK,EAAEhB,UAAU,CAACuB,IAAK,CAAC;IAAA;IACxBC,cAAc,EAAE,CAAC,WAAW,EAAE,aAAa,EAAE,WAAW,CAAE,CAAC;IAAA;IAC3DP,QAAQ,EAAGQ,OAAO,IAAKvB,aAAa,CAAC;MAAEqB,IAAI,EAAEE;IAAQ,CAAC,CAAE,CAAC;IAAA;IACzDC,WAAW,EAAEnC,mDAAE,CAAC,YAAY,CAAE,CAAC;EAAA,CAC/B,CAAC,EAEFkB,oDAAA,CAACf,qEAAgB,QAChBe,oDAAA,CAAChB,gEAAW;IACXkC,QAAQ,EAAGC,KAAK,IAAK;MACpBT,OAAO,CAACC,GAAG,CAACQ,KAAK,CAAC;MAClB1B,aAAa,CAAC;QACbY,QAAQ,EAAEc,KAAK,CAACf,GAAG;QACnBF,QAAQ,EAAEiB,KAAK,CAACC,GAAG;QACnBd,OAAO,EAAEa,KAAK,CAACE,EAAE;QACjBC,UAAU,EAAEH,KAAK,CAACI;MACnB,CAAC,CAAC;IACH,CAAE;IACFC,IAAI,EAAC,OAAO;IACZjB,KAAK,EAAEhB,UAAU,CAACe,OAAQ;IAC1BmB,MAAM,EAAEA,CAAC;MAAEC;IAAK,CAAC,KAAK5B,cAAc,CAAC4B,IAAI;EAAE,CAC3C,CACgB,CACV,CAAC;AAEZ;AAAChC,EAAA,CAjEuBJ,IAAI;EAAA,QAGRP,kEAAa;AAAA;AAAA4C,EAAA,GAHTrC,IAAI;AAAA,IAAAqC,EAAA;AAAAC,sCAAA,CAAAD,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCvC5B","sources":["webpack://test/./src/edit.js","webpack://test/webpack/runtime/getFullHash"],"sourcesContent":["/**\n * Retrieves the translation of text.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-i18n/\n */\nimport { __ } from \"@wordpress/i18n\";\n\n/**\n * React hook that is used to mark the block wrapper element.\n * It provides all the necessary props like the class name.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/packages/packages-block-editor/#useblockprops\n */\nimport {\n\tuseBlockProps,\n\tMediaUpload,\n\tMediaUploadCheck,\n\tRichText,\n} from \"@wordpress/block-editor\";\n\n/**\n * Lets webpack process CSS, SASS or SCSS files referenced in JavaScript files.\n * Those files can contain any CSS code that gets applied to the editor.\n *\n * @see https://www.npmjs.com/package/@wordpress/scripts#using-css\n */\nimport \"./editor.scss\";\n\n/**\n * The edit function describes the structure of your block in the context of the\n * editor. This represents what the editor will render when the block is used.\n *\n * @see https://developer.wordpress.org/block-editor/reference-guides/block-api/block-edit-save/#edit\n *\n * @return {Element} Element to render.\n */\n\nimport { useState } from \"react\";\nimport { TextControl, Button } from \"@wordpress/components\";\nexport default function Edit({ attributes, className, setAttributes }) {\n\t//used to update edit screen orientation\n\tconst [orientation, setOrientation] = useState(attributes.orientation);\n\tconst blockProps = useBlockProps({\n\t\tclassName: orientation,\n\t});\n\n\tconst getImageButton = (openEvent) => {\n\t\treturn (\n\t\t\t<img\n\t\t\t\tsrc={attributes.imageUrl}\n\t\t\t\tonClick={openEvent}\n\t\t\t\talt={attributes?.imageAlt}\n\t\t\t\tdata-imageid={attributes?.imageID}\n\t\t\t\tclassName=\"image test-image\"\n\t\t\t/>\n\t\t);\n\t};\n\n\treturn (\n\t\t<section {...blockProps}>\n\t\t\t<select\n\t\t\t\tvalue={attributes.orientation}\n\t\t\t\tonChange={(e) => {\n\t\t\t\t\tconsole.log(e.target.value);\n\t\t\t\t\tsetAttributes({ orientation: e.target.value });\n\t\t\t\t\tsetOrientation(e.target.value);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<option value=\"left\">Image Left, Content Right</option>\n\t\t\t\t<option value=\"right\">Image Right, Content Left</option>\n\t\t\t</select>\n\n\t\t\t{/* <p className=\"test-text\"> */}\n\t\t\t{/* <TextControl\n\t\t\t\t\t\t\tlabel=\"write your text\"\n\t\t\t\t\t\t\tvalue={attributes.text}\n\t\t\t\t\t\t\tonChange={(value) => setAttributes({ text: value })}\n\t\t\t\t\t\t/> */}\n\t\t\t<RichText\n\t\t\t\ttagName=\"p\" // The tag here is the element output and editable in the admin\n\t\t\t\tvalue={attributes.text} // Any existing content, either from the database or an attribute default\n\t\t\t\tallowedFormats={[\"core/bold\", \"core/italic\", \"core/link\"]} // Allow the content to be made bold or italic, but do not allow other formatting options\n\t\t\t\tonChange={(content) => setAttributes({ text: content })} // Store updated content as a block attribute\n\t\t\t\tplaceholder={__(\"Heading...\")} // Display this text before any content has been added by the user\n\t\t\t/>\n\t\t\t{/* </p> */}\n\t\t\t<MediaUploadCheck>\n\t\t\t\t<MediaUpload\n\t\t\t\t\tonSelect={(media) => {\n\t\t\t\t\t\tconsole.log(media);\n\t\t\t\t\t\tsetAttributes({\n\t\t\t\t\t\t\timageAlt: media.alt,\n\t\t\t\t\t\t\timageUrl: media.url,\n\t\t\t\t\t\t\timageID: media.id,\n\t\t\t\t\t\t\timageSizes: media.sizes,\n\t\t\t\t\t\t});\n\t\t\t\t\t}}\n\t\t\t\t\ttype=\"image\"\n\t\t\t\t\tvalue={attributes.imageID}\n\t\t\t\t\trender={({ open }) => getImageButton(open)}\n\t\t\t\t/>\n\t\t\t</MediaUploadCheck>\n\t\t</section>\n\t);\n}\n","__webpack_require__.h = () => (\"ec3e8356aafccffd64f3\")"],"names":["__","useBlockProps","MediaUpload","MediaUploadCheck","RichText","useState","TextControl","Button","Edit","attributes","className","setAttributes","_s","orientation","setOrientation","blockProps","getImageButton","openEvent","createElement","src","imageUrl","onClick","alt","imageAlt","imageID","value","onChange","e","console","log","target","tagName","text","allowedFormats","content","placeholder","onSelect","media","url","id","imageSizes","sizes","type","render","open","_c","$RefreshReg$"],"sourceRoot":""}